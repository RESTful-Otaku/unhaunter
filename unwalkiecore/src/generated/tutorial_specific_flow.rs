// THIS FILE IS AUTOMATICALLY GENERATED BY THE WALKIE VOICE GENERATOR TOOL
// DO NOT EDIT MANUALLY

use crate::ConceptTrait;
use unwalkie_types::{VoiceLineData, WalkieTag};

/// Defines the different voice line concepts available in this module.
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum TutorialSpecificFlowConcept {
    FirstMissionPlayerNotEnteringCabin,
}

impl TutorialSpecificFlowConcept {
    /// Retrieves a vector of `VoiceLineData` for this concept variant.
    pub fn get_lines(&self) -> Vec<VoiceLineData> {
        match self {
            Self::FirstMissionPlayerNotEnteringCabin => vec![
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_01.ogg".to_string(),
                    subtitle_text: "Right then, this is it. Your first proper job. The reported activity is in that building over there. Best head on over and see what's what.".to_string(),
                    tags: vec![WalkieTag::DirectHint, WalkieTag::Encouraging, WalkieTag::FirstTimeHint, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 9,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_02.ogg".to_string(),
                    subtitle_text: "Okay, rookie. Your mission, should you choose to actually start it, is inside that structure. Time to make your way to the door.".to_string(),
                    tags: vec![WalkieTag::DirectHint, WalkieTag::FirstTimeHint, WalkieTag::MediumLength, WalkieTag::SnarkyHumor, WalkieTag::TutorialSpecific],
                    length_seconds: 8,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_03.ogg".to_string(),
                    subtitle_text: "The paranormal excitement isn't going to come to the van, I'm afraid. You'll need to venture into the location itself.".to_string(),
                    tags: vec![WalkieTag::FirstTimeHint, WalkieTag::Guidance, WalkieTag::Humorous, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 8,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_04.ogg".to_string(),
                    subtitle_text: "First step of any investigation is, well, investigating. That means heading into the place with the reported spook.".to_string(),
                    tags: vec![WalkieTag::FirstTimeHint, WalkieTag::Guidance, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 8,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_05.ogg".to_string(),
                    subtitle_text: "The objective is inside the building. Whenever you're ready to begin your ghost-hunting career, that's your starting point.".to_string(),
                    tags: vec![WalkieTag::DirectHint, WalkieTag::Encouraging, WalkieTag::FirstTimeHint, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 8,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_06.ogg".to_string(),
                    subtitle_text: "Don't worry, the van will still be here when you get back. The adventure, however, is in there.".to_string(),
                    tags: vec![WalkieTag::Encouraging, WalkieTag::FirstTimeHint, WalkieTag::Humorous, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 6,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_07.ogg".to_string(),
                    subtitle_text: "This is your first case, so let's start with the basics. Step one: approach the haunted location.".to_string(),
                    tags: vec![WalkieTag::DirectHint, WalkieTag::FirstTimeHint, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 7,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_08.ogg".to_string(),
                    subtitle_text: "All your fancy gear is for use inside the affected area. So, best head on over there to make use of it.".to_string(),
                    tags: vec![WalkieTag::FirstTimeHint, WalkieTag::Guidance, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 7,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_09.ogg".to_string(),
                    subtitle_text: "The ghost is unlikely to pay us a visit in the truck. You'll need to go to it. Towards the building, please.".to_string(),
                    tags: vec![WalkieTag::DirectHint, WalkieTag::FirstTimeHint, WalkieTag::MediumLength, WalkieTag::SlightlyImpatient, WalkieTag::TutorialSpecific],
                    length_seconds: 7,
                },
                VoiceLineData {
                    ogg_path: "walkie/generated/tutorial_specific_flow/firstmissionplayernotenteringcabin_10.ogg".to_string(),
                    subtitle_text: "Ready to make your grand debut as an Unhaunter? The stage is set... inside that building.".to_string(),
                    tags: vec![WalkieTag::Encouraging, WalkieTag::FirstTimeHint, WalkieTag::Humorous, WalkieTag::MediumLength, WalkieTag::TutorialSpecific],
                    length_seconds: 6,
                },
            ],
        }
    }
}

// Auto-generated implementation of ConceptTrait
impl ConceptTrait for TutorialSpecificFlowConcept {
    fn get_lines(&self) -> Vec<VoiceLineData> {
        // Delegate to the generated get_lines method
        self.get_lines()
    }
}
